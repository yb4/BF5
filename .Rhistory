<<<<<<< HEAD
install.packages("microbenchmark")
---
title: "index"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
```{r init, message=FALSE, echo=FALSE}
#load packages and sourcing files
library(dplyr)
library(ggplot2)
library(microbenchmark)
source("scripts/ufo_chart1.R")
source("scripts/ufo_chart2.R")
source("scripts/summary_info.R")
source("scripts/compile_results.R")
```
```{r, echo=FALSE, message=TRUE}
knitr::kable(combined_table)
```
```{r, echo=FALSE, message=TRUE ,fig.width=10,fig.height=11}
ufo_data <- read.csv("data/UFOCoords.csv", stringsAsFactors = FALSE)
print(ufo_shape(ufo_data))
print(ufo_state(ufo_data))
```
```{r, echo=FALSE, message=TRUE}
ufo_summary <- summary_info(ufo_data)
print(ufo_summary)
```
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(microbenchmark)
library(dplyr)
library(ggplot2)
library(microbenchmark)
library(microbenchmark)
source("scripts/ufo_chart1.R")
source("scripts/ufo_chart2.R")
source("scripts/summary_info.R")
source("scripts/compile_results.R")
install.packages("shiny")
library
library("shiny")
lapply(total_homeless$State,state_save_csv)
data_sets <- read.csv("data/data_by_states/ME.csv")
View(data_sets)
p <- ggplot(data_sets, aes(x='Year', y=Count)) +# geom_bar(stat = "identity")
data_sets <- read.csv("data/data_by_states/ME.csv.numbers")
View(data_sets)
#Setting up libraries required for this task
library(shiny)
library(dplyr)
library(data.table)
library(ggplot2)
library(R.utils)
setwd("~/Desktop/BF5/")
homeless_by_state <- data.table :: fread("data/Homelessness.csv", sep = ",", stringsAsFactors = FALSE)
total_homeless <- homeless_by_state %>% filter(Measures == "Total Homeless") %>% filter(Year == "2016")
write.csv(total_homeless, "data/total_homeless.csv", row.names = TRUE)
#homeless_per_state <- filter(total_homeless, State =="CA")
state_save_csv <- function(state_name) {
output_data <- paste("Data/Data_by_states/", state_name, ".csv", sep = "")
state_of_data <- filter(total_homeless, State == state_name)
final_output <- write.csv(state_of_data, output_data, row.names = FALSE)
return(final_output)
}
lapply(total_homeless$State,state_save_csv)
data_sets <- read.csv("data/data_by_states/ME.csv.numbers")
lapply(total_homeless$State,state_save_csv)
data_sets <- read.csv("data/data_by_states/ME.csv")
View(data_sets)
#Setting up libraries required for this task
library(shiny)
library(dplyr)
library(data.table)
library(ggplot2)
library(R.utils)
setwd("~/Desktop/BF5/")
homeless_by_state <- data.table :: fread("data/Homelessness.csv", sep = ",", stringsAsFactors = FALSE)
total_homeless <- homeless_by_state %>% filter(Measures == "Total Homeless") %>% filter(Year == "2016")
write.csv(total_homeless, "data/total_homeless.csv", row.names = TRUE)
#homeless_per_state <- filter(total_homeless, State =="CA")
state_save_csv <- function(state_name) {
output_data <- paste("Data/Data_by_states/", state_name, ".csv", sep = "")
state_of_data <- filter(total_homeless, State == state_name)
final_output <- write.csv(state_of_data, output_data, row.names = FALSE)
return(final_output)
}
lapply(total_homeless$State,state_save_csv)
data_sets <- read.csv("data/data_by_states/ME.csv")
View(data_sets)
#Setting up libraries required for this task
library(shiny)
library(dplyr)
library(data.table)
library(ggplot2)
library(R.utils)
setwd("~/Desktop/BF5/")
homeless_by_state <- data.table :: fread("data/Homelessness.csv", sep = ",", stringsAsFactors = FALSE)
total_homeless <- homeless_by_state %>% filter(Measures == "Total Homeless") %>% filter(Year == "1/1/2016")
write.csv(total_homeless, "data/total_homeless.csv", row.names = TRUE)
#homeless_per_state <- filter(total_homeless, State =="CA")
state_save_csv <- function(state_name) {
output_data <- paste("Data/Data_by_states/", state_name, ".csv", sep = "")
state_of_data <- filter(total_homeless, State == state_name)
final_output <- write.csv(state_of_data, output_data, row.names = FALSE)
return(final_output)
}
lapply(total_homeless$State,state_save_csv)
data_sets <- read.csv("data/data_by_states/ME.csv")
View(data_sets)
p <- ggplot(data_sets, aes(x='Year', y=Count)) +# geom_bar(stat = "identity")
p
p
View(p)
#Setting up libraries required for this task
library(shiny)
library(dplyr)
library(data.table)
library(ggplot2)
library(R.utils)
setwd("~/Desktop/BF5/")
homeless_by_state <- data.table :: fread("data/Homelessness.csv", sep = ",", stringsAsFactors = FALSE)
total_homeless <- homeless_by_state %>% filter(Measures == "Total Homeless") %>% filter(Year == "1/1/2016")
write.csv(total_homeless, "data/total_homeless.csv", row.names = TRUE)
#homeless_per_state <- filter(total_homeless, State =="CA")
state_save_csv <- function(state_name) {
output_data <- paste("Data/Data_by_states/", state_name, ".csv", sep = "")
state_of_data <- filter(total_homeless, State == state_name)
final_output <- write.csv(state_of_data, output_data, row.names = FALSE)
return(final_output)
}
lapply(total_homeless$State,state_save_csv)
data_sets <- read.csv("data/data_by_states/ME.csv")
View(data_sets)
#Setting up libraries required for this task
library(shiny)
library(dplyr)
library(data.table)
library(ggplot2)
library(R.utils)
setwd("~/Desktop/BF5/")
homeless_by_state <- data.table :: fread("data/Homelessness.csv", sep = ",", stringsAsFactors = FALSE)
total_homeless <- homeless_by_state %>% filter(Measures == "Total Homeless") %>% filter(Year == "1/1/2016")
write.csv(total_homeless, "data/total_homeless.csv", row.names = TRUE)
#homeless_per_state <- filter(total_homeless, State =="CA")
state_save_csv <- function(state_name) {
output_data <- paste("Data/Data_by_states/", state_name, ".csv", sep = "")
state_of_data <- filter(total_homeless, State == state_name)
final_output <- write.csv(state_of_data, output_data, row.names = FALSE)
return(final_output)
}
lapply(total_homeless$State,state_save_csv)
data_sets <- read.csv("data/data_by_states/ME.csv")
p <- ggplot(data_sets, aes(x='Year', y=Count)) +# geom_bar(stat = "identity")
p <- ggplot(data_sets, aes(x='Year', y=Count)) +# geom_bar(stat = "identity")
p <- ggplot(data_sets, aes(x='Year', y=Count)) +# geom_bar(stat = "identity")
p <- ggplot(data_sets, aes(x='Year', y=Count)) +# geom_bar(stat = "identity")
#Setting up libraries required for this task
library(shiny)
library(dplyr)
library(data.table)
library(ggplot2)
library(R.utils)
setwd("~/Desktop/BF5/")
homeless_by_state <- data.table :: fread("data/Homelessness.csv", sep = ",", stringsAsFactors = FALSE)
total_homeless <- homeless_by_state %>% filter(Measures == "Total Homeless") %>% filter(Year == "1/1/2016")
write.csv(total_homeless, "data/total_homeless.csv", row.names = TRUE)
#homeless_per_state <- filter(total_homeless, State =="CA")
state_save_csv <- function(state_name) {
output_data <- paste("Data/Data_by_states/", state_name, ".csv", sep = "")
state_of_data <- filter(total_homeless, State == state_name)
final_output <- write.csv(state_of_data, output_data, row.names = FALSE)
return(final_output)
}
lapply(total_homeless$State,state_save_csv)
data_sets <- read.csv("data/data_by_states/ME.csv")
p <- ggplot(data_sets, aes(x='Year', y=Count)) +# geom_bar(stat = "identity")
p
View(p)
data_sets <- read.csv("data/data_by_states/ME.csv")
p <- ggplot(data_sets, aes(x='Year', y=Count)) +# geom_bar(stat = "identity")
print(p)
data_sets <- read.csv("data/data_by_states/ME.csv")
p <- ggplot(data_sets, aes(x='Year', y=Count)) +# geom_bar(stat = "identity")
print(p)
#Setting up libraries required for this task
library(shiny)
library(dplyr)
library(data.table)
library(ggplot2)
library(R.utils)
setwd("~/Desktop/BF5/")
homeless_by_state <- data.table :: fread("data/Homelessness.csv", sep = ",", stringsAsFactors = FALSE)
total_homeless <- homeless_by_state %>% filter(Measures == "Total Homeless") %>% filter(Year == "1/1/2016")
write.csv(total_homeless, "data/total_homeless.csv", row.names = TRUE)
#homeless_per_state <- filter(total_homeless, State =="CA")
state_save_csv <- function(state_name) {
output_data <- paste("Data/Data_by_states/", state_name, ".csv", sep = "")
state_of_data <- filter(total_homeless, State == state_name)
final_output <- write.csv(state_of_data, output_data, row.names = FALSE)
return(final_output)
}
lapply(total_homeless$State,state_save_csv)
data_sets <- read.csv("data/data_by_states/ME.csv")
p <- ggplot(data_sets, aes(x='Year', y=Count)) +# geom_bar(stat = "identity")
lapply(total_homeless$State,state_save_csv)
data_sets <- read.csv("data/data_by_states/ME.csv")
p <- barplot (data_sets,
main = HomelessData_by_County,
xlab = 'Year', ylab = 'Count',
col='blue')
p <- barplot (data_sets,
main = HomelessData_by_County,
xlab = 'data_sets$Year', ylab = 'data_sets$Count',
col='blue')
data_sets <- read.csv("data/data_by_states/ME.csv")
# p <- barplot (data_sets,
#               main = HomelessData_by_County,
#               xlab = 'data_sets$Year', ylab = 'data_sets$Count',
#               col='blue')
p <- ggplot(data_sets, aes(x='Year', y=Count)) +# geom_bar(stat = "identity")
data_sets <- read.csv("data/data_by_states/ME.csv")
p <- ggplot(data_sets, aes(x='Year', y=Count)) + geom_bar(stat = "identity")
# p <- barplot (data_sets,
#               main = HomelessData_by_County,
#               xlab = 'data_sets$Year', ylab = 'data_sets$Count',
#               col='blue')
p <- ggplot(data_sets, aes(x='Year', y=Count)) + geom_bar(stat = "identity")
lapply(total_homeless$State,state_save_csv)
data_sets <- read.csv("data/data_by_states/ME.csv")
p <- ggplot(data_sets, aes(x='Year', y=Count)) + geom_bar(stat = "identity")
data_sets <- read.csv("data/data_by_states/ME.csv")
ggplot(data_sets, aes(x='Year', y=Count)) + geom_bar(stat = "identity")
data_sets <- read.csv("data/data_by_states/ME.csv")
ggplot(data_sets, aes(x=Year, y=Count)) + geom_bar(stat = "identity")
data_sets <- read.csv("data/data_by_states/ME.csv")
ggplot(data_sets, aes(x=Count, y=Year)) + geom_bar(stat = "identity")
#Setting up libraries required for this task
library(shiny)
library(dplyr)
library(data.table)
library(ggplot2)
library(R.utils)
setwd("~/Desktop/BF5/")
homeless_by_state <- data.table :: fread("data/Homelessness.csv", sep = ",", stringsAsFactors = FALSE)
total_homeless <- homeless_by_state %>% filter(Measures == "Total Homeless") %>% filter(Year == "1/1/201")
write.csv(total_homeless, "data/total_homeless.csv", row.names = TRUE)
#homeless_per_state <- filter(total_homeless, State =="CA")
state_save_csv <- function(state_name) {
output_data <- paste("Data/Data_by_states/", state_name, ".csv", sep = "")
state_of_data <- filter(total_homeless, State == state_name)
final_output <- write.csv(state_of_data, output_data, row.names = FALSE)
return(final_output)
}
lapply(total_homeless$State,state_save_csv)
data_sets <- read.csv("data/data_by_states/ME.csv")
ggplot(data_sets, aes(x=Count, y=Year)) + geom_bar(stat = "identity")
View(data_sets)
View(data_sets)
data_sets <- read.csv("data/data_by_states/ME.csv")
barplot (data_sets,
main = HomelessData_by_County,
xlab = 'data_sets$Year', ylab = 'data_sets$Count',
col='blue')
lapply(total_homeless$State,state_save_csv)
data_sets <- read.csv("data/data_by_states/ME.csv")
ggplot(data_sets, aes(x=Year, y=Count)) + geom_bar(stat = "identity")
library(R.utils)
setwd("~/Desktop/BF5/")
homeless_by_state <- data.table :: fread("data/Homelessness.csv", sep = ",", stringsAsFactors = FALSE)
total_homeless <- homeless_by_state %>% filter(Measures == "Total Homeless") %>% filter(Year == "1/1/201")
write.csv(total_homeless, "data/total_homeless.csv", row.names = TRUE)
#homeless_per_state <- filter(total_homeless, State =="CA")
state_save_csv <- function(state_name) {
output_data <- paste("Data/Data_by_states/", state_name, ".csv", sep = "")
state_of_data <- filter(total_homeless, State == state_name)
final_output <- write.csv(state_of_data, output_data, row.names = FALSE)
return(final_output)
}
lapply(total_homeless$State,state_save_csv)
data_sets <- read.csv("data/data_by_states/ME.csv")
ggplot(data_sets, aes(x=Year, y=Count)) + geom_bar(stat = "identity")
setwd("~/Desktop/BF5/")
homeless_by_state <- data.table :: fread("data/Homelessness.csv", sep = ",", stringsAsFactors = FALSE)
total_homeless <- homeless_by_state %>% filter(Measures == "Total Homeless") %>% filter(Year == "1/1/2016" & Year == "1/1/2015")
write.csv(total_homeless, "data/total_homeless.csv", row.names = TRUE)
#homeless_per_state <- filter(total_homeless, State =="CA")
state_save_csv <- function(state_name) {
output_data <- paste("Data/Data_by_states/", state_name, ".csv", sep = "")
state_of_data <- filter(total_homeless, State == state_name)
final_output <- write.csv(state_of_data, output_data, row.names = FALSE)
return(final_output)
}
lapply(total_homeless$State,state_save_csv)
data_sets <- read.csv("data/data_by_states/ME.csv")
ggplot(data_sets, aes(x=Year, y=Count)) + geom_bar(stat = "identity")
homeless_by_state <- data.table :: fread("data/Homelessness.csv", sep = ",", stringsAsFactors = FALSE)
total_homeless <- homeless_by_state %>% filter(Measures == "Total Homeless") %>% filter(Year == "1/1/2016")
homeless_by_state <- data.table :: fread("data/Homelessness.csv", sep = ",", stringsAsFactors = FALSE)
total_homeless <- homeless_by_state %>% filter(Measures == "Total Homeless")
write.csv(total_homeless, "data/total_homeless.csv", row.names = TRUE)
homeless_by_state <- data.table :: fread("data/Homelessness.csv", sep = ",", stringsAsFactors = FALSE)
total_homeless <- homeless_by_state %>% filter(Measures == "Total Homeless") %>% select(Year == "1/1/2015" & Year == "1/1/2016")
homeless_by_state <- data.table :: fread("data/Homelessness.csv", sep = ",", stringsAsFactors = FALSE)
total_homeless <- homeless_by_state %>% filter(Measures == "Total Homeless") %>% select("Year" == "1/1/2015" & "Year" == "1/1/2016")
homeless_by_state <- data.table :: fread("data/Homelessness.csv", sep = ",", stringsAsFactors = FALSE)
total_homeless <- homeless_by_state %>% filter(Measures == "Total Homeless") %>% filter(Year == "1/1/2015" & Year == "1/1/2016")
write.csv(total_homeless, "data/total_homeless.csv", row.names = TRUE)
homeless_by_state <- data.table :: fread("data/Homelessness.csv", sep = ",", stringsAsFactors = FALSE)
total_homeless <- homeless_by_state %>% filter(Measures == "Total Homeless") %>% filter(Year == "1/1/2015")
write.csv(total_homeless, "data/total_homeless.csv", row.names = TRUE)
homeless_by_state <- data.table :: fread("data/Homelessness.csv", sep = ",", stringsAsFactors = FALSE)
total_homeless <- homeless_by_state %>% filter(Measures == "Total Homeless") %>% filter(Year == "1/1/2015" & Year == "1/1/2016")
write.csv(total_homeless, "data/total_homeless.csv", row.names = TRUE)
homeless_by_state <- data.table :: fread("data/Homelessness.csv", sep = ",", stringsAsFactors = FALSE)
total_homeless <- homeless_by_state %>% filter(Measures == "Total Homeless") %>% filter(Year == "1/1/2015" || Year == "1/1/2016")
write.csv(total_homeless, "data/total_homeless.csv", row.names = TRUE)
homeless_by_state <- data.table :: fread("data/Homelessness.csv", sep = ",", stringsAsFactors = FALSE)
total_homeless <- homeless_by_state %>% filter(Measures == "Total Homeless") %>% filter(Year == "1/1/2015" || Year == "1/1/2016")
View(total_homeless)
total_homeless <- homeless_by_state %>% filter(Measures == "Total Homeless", Year == "1/1/2015")
homeless_by_state <- data.table :: fread("data/Homelessness.csv", sep = ",", stringsAsFactors = FALSE)
total_homeless <- homeless_by_state %>% filter(Measures == "Total Homeless", Year == "1/1/2015")
View(total_homeless)
total_homeless <- homeless_by_state %>% filter(Measures == "Total Homeless", Year == "1/1/2015", Year == "1/1/2016")
homeless_by_state <- data.table :: fread("data/Homelessness.csv", sep = ",", stringsAsFactors = FALSE)
total_homeless <- homeless_by_state %>% filter(Measures == "Total Homeless", Year == "1/1/2015", Year == "1/1/2016")
View(total_homeless)
homeless_by_state <- data.table :: fread("data/Homelessness.csv", sep = ",", stringsAsFactors = FALSE)
total_homeless <- homeless_by_state %>% filter(Measures == "Total Homeless", (Year == "1/1/2015" || Year == "1/1/2016"))
View(total_homeless)
homeless_by_state <- data.table :: fread("data/Homelessness.csv", sep = ",", stringsAsFactors = FALSE)
total_homeless <- homeless_by_state %>% filter(Measures == "Total Homeless", (Year == "1/1/2015" || Year == "1/1/2016"))
total_homeless <- homeless_by_state %>% filter(Measures == "Total Homeless", Year == ("1/1/2015" || "1/1/2016"))
homeless_by_state <- data.table :: fread("data/Homelessness.csv", sep = ",", stringsAsFactors = FALSE)
total_homeless <- homeless_by_state %>% filter(Measures == "Total Homeless") %>%(Year == ("1/1/2015"))
write.csv(total_homeless, "data/total_homeless.csv", row.names = TRUE)
View(data_sets)
View(data_sets)
data_sets <- read.csv("data/data_by_states/ME.csv")
ggplot(data_sets, aes(x=Coc.Name, y=Count)) + geom_bar(stat = "identity")
data_sets <- read.csv("data/data_by_states/ME.csv")
ggplot(data_sets, aes(x=Coc.Name, y=Count)) + geom_bar(stat = "identity")
lapply(total_homeless$State,state_save_csv)
data_sets <- read.csv("data/data_by_states/ME.csv")
ggplot(data_sets, aes(x=Coc.Name, y=Count)) + geom_bar(stat = "identity")
data_sets <- read.csv("data/data_by_states/ME.csv")
ggplot(data_sets, aes(x="Coc.Name", y=Count)) + geom_bar(stat = "identity")
data_sets <- read.csv("data/data_by_states/ME.csv")
ggplot(data_sets, aes(x="Coc.Number", y=Count)) + geom_bar(stat = "identity")
data_sets <- read.csv("data/data_by_states/ME.csv")
ggplot(data_sets, aes(x="Coc.Name", y=Count)) + geom_bar(stat = "identity")
=======
employee <- list(name="Huang", zip=98105, union=FALSE)
employee
cat("hi", 1, "okay")
employee[[1]]
employee[1]
h <- c(160, 171, 177, 199, 182)
w <- c(66,77,88,82,92)
health <- data.frame(height=h, weight=w)
health
health$height
health$weight
health["weight"]
health[1,3]
health[1,2]
health[1]
health[2]
health[1,]
health[1:3, 2]
health[c(5,4,3),]
row.names(health) <- c("Juan", "Alex", "Ting", "Tong", "Tam")
health
health["Juan", "height"]
health[health$height > 180]
health[health$height > 180,]
health$weight["Tong"]
health["Tong", "weight"]
health$weight["Tong",]
health[4,2]
health[4,]
health[4]
health["Tong",2]
health$bmi <- health$weight/(health$height/100)^2
health
row.names(health[4]) <- "An"
row.names(health[4,]) <- "An"
health
health[4,1] <- "An"
health
health[4,1] <- c("An")
health
table <- filter(data, longitude > 180, longitude <= 310, latitude > 15)
x <- 1:20
x
max(x)
y <- 20:40
y
xy <- data.frame(x, y)
y <- 21: 40
xy <- data.frame(x, y)
xy
max(y)
max(x)
max(xy[,x])
max(xy[,'x'])
median(xy$x)
shiny::runApp('Desktop/201/a8-app-towm1204')
runApp('Desktop/201/a8-app-towm1204')
runApp('Desktop/201/a8-app-towm1204')
runApp('Desktop/201/a8-app-towm1204')
runApp('Desktop/201/a8-app-towm1204')
runApp('Desktop/201/a8-app-towm1204')
runApp('Desktop/201/a8-app-towm1204')
ufo_data <- read.csv("data/UFOCoords.csv.bz2", stringsAsFactors = FALSE)
setwd("~/Desktop/201/a8-app-towm1204")
ufo_data <- read.csv("data/UFOCoords.csv.bz2", stringsAsFactors = FALSE)
View(ufo_data)
runApp()
runApp()
runApp()
runApp()
filter(ufo_data, Country = 'USA')
filter(ufo_data, Country == 'USA')
runApp()
runApp()
runApp()
runApp()
rm(ufo_data
)
runApp()
runApp()
runApp()
runApp()
ufo_data <- read.csv("data/UFOCoords.csv.bz2", stringsAsFactors = FALSE)
runApp()
runApp()
ufo_data = filter(ufo_data, Country == 'CANADA')
View(ufo_data)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
paste("jiopj", "jqieofp")
runApp()
runApp()
runApp()
View(ufo_data)
runApp()
ufo_data <- read.csv("data/UFOCoords.csv.bz2", stringsAsFactors = FALSE)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages(rsconnect)
install.packages('rsconnect')
rsconnect::setAccountInfo(name='towm1204',
token='19F5F2F0DFBE7D64FF11E45708A31A20',
secret='<SECRET>')
rsconnect::setAccountInfo(name='towm1204',
token='19F5F2F0DFBE7D64FF11E45708A31A20',
secret='<SECRET>')
rsconnect::setAccountInfo(name='towm1204',
token='19F5F2F0DFBE7D64FF11E45708A31A20',
secret='N+bqMtCa4k9+n1gTfTDAW30AqyhIf5/QT2t+Y4m4')
rsconnect::deployApp('~/Desktop/201/a8-app-towm1204')
rsconnect::deployApp('~/Desktop/201/a8-app-towm1204')
iris
library(iris)
source('~/Desktop/201/a5-api-report-towm1204/process_data.R')
runApp('~/Downloads/refugee-tracker-master')
install.packages('leaflet')
install.packages('shinythemes')
runApp('~/Downloads/refugee-tracker-master')
install.packages('geojsonio')
install.packages('countrycode')
runApp('~/Downloads/refugee-tracker-master')
runApp('~/Downloads/refugee-tracker-master')
source('~/Desktop/201/a8-app-towm1204/test_script.R')
rm(list = ls())
source('~/Desktop/201/a8-app-towm1204/test_script.R')
source('~/Desktop/201/a8-app-towm1204/test_script.R')
source('~/Desktop/201/a8-app-towm1204/test_script.R')
View(m)
m
getwd()
setwd("~/Desktop/201/BF5")
source('~/Desktop/201/a8-app-towm1204/test_script.R')
source('~/Desktop/201/a8-app-towm1204/test_script.R')
View(df_rent)
View(sp_rent)
View(m_geom)
source('~/Desktop/201/a8-app-towm1204/test_script.R')
source('~/Desktop/201/a8-app-towm1204/test_script.R')
View(df_homeless)
library(dplyr)
View(m_geom)
state.name
df_homeless <- read.csv("~/Desktop/201/BF5/Data/Homelessness.csv", stringsAsFactors = FALSE)
df_homeless <- state.abb[grep(df_homeless$State, state.name)]
df_homeless <- state.abb[grepl(df_homeless$State, state.name)]
df_homeless <- state.abb(df_homeless$State)
class(state.abb)
state.abb
df_homeless <- read.csv("~/Desktop/201/BF5/Data/Homelessness.csv", stringsAsFactors = FALSE)
x <- list(a = 1:10, beta = exp(-3:3), logic = c(TRUE,FALSE,FALSE,TRUE))
View(x)
letters
grep("[a-z]", letters)
letters
[a-z]
state
states
state.name
df_homeless <- replace(df_homeless$State, state.name, state.abb)
View(df_rent)
df_homeless$State <- replace(df_homeless$State, state.abb, state.name)
df_homeless$State <- replace(df_homeless$State, state.abb, state.name)
df_homeless <- read.csv("~/Desktop/201/BF5/Data/Homelessness.csv", stringsAsFactors = FALSE)
replace(df_homeless$State, state.abb, state.name)
> state.name[match(df_homeless$State, state.abb)]
state.name[match(df_homeless$State, state.abb)]
df_homeless <- state.name[match(df_homeless$State, state.abb)]
df_homeless <- read.csv("~/Desktop/201/BF5/Data/Homelessness.csv", stringsAsFactors = FALSE)
df_homeless['State'] <- state.name[match(df_homeless$State, state.abb)]
df_homeless['State'] <- state.name[match(df_homeless$State, state.abb)]
df_homeless['State'] <- state.name[match(df_homeless$State, state.abb)]
df_homeless <- read.csv("~/Desktop/201/BF5/Data/Homelessness.csv", stringsAsFactors = FALSE)
df_homeless['State'] <- state.name[match(df_homeless$State, state.abb)]
source('~/Desktop/201/a8-app-towm1204/test_script.R')
m
m_geom = maps::map("state", fill = TRUE, plot = FALSE)
View(m_geom)
m_geom
source('~/Desktop/201/a8-app-towm1204/test_script.R')
m
df_rent = read.csv("Data/kaggle_gross_rent.csv", stringsAsFactors = FALSE)
df_rent = as.data.table(df_rent)
df_rent[, ID := sprintf("%s,%s", tolower(State_Name),
tolower(stringr::str_trim(stringr::str_replace(County, "County", ""))))]
View(df_rent)
df_rent[, ID := sprintf("%s,%s", tolower(State_Name),
tolower(stringr::str_trim(stringr::str_replace(County, "County", ""))))]
df_rent = df_rent[Samples != 0, .(State_Name = State_Name[1],
County = County[1],
w_median = (1/sum(Samples))*sum(Samples*Median)),
by = "ID"]
df_rent = as.data.table(df_rent)
df_rent[, ID := sprintf("%s,%s", tolower(State_Name),
tolower(stringr::str_trim(stringr::str_replace(County, "County", ""))))]
df_rent = read.csv("Data/kaggle_gross_rent.csv", stringsAsFactors = FALSE)
df_rent = as.data.table(df_rent)
df_rent[, ID := sprintf("%s,%s", tolower(State_Name),
tolower(stringr::str_trim(stringr::str_replace(County, "County", ""))))]
df_rent = read.csv("Data/kaggle_gross_rent.csv", stringsAsFactors = FALSE)
df_rent = as.data.table(df_rent)
df_rent[, ID := sprintf("%s,%s", tolower(State_Name),
tolower(stringr::str_trim(stringr::str_replace(County, "County", ""))))]
View(m_geom)
source('~/Desktop/201/a8-app-towm1204/test_script.R')
source('~/Desktop/201/a8-app-towm1204/test_script.R')
View(m_geom)
m_geom[["names"]]
source('~/Desktop/201/a8-app-towm1204/test_script.R')
source('~/Desktop/201/a8-app-towm1204/test_script.R')
View(df_homeless)
View(df_rent)
df_rent = readr::read_csv("~/Desktop/201/BF5/Data/kaggle_gross_rent.csv", col_types = l_cols)
df_rent = read.csv("Data/kaggle_gross_rent.csv", stringsAsFactors = FALSE)
df_rent = readr::read_csv("~/Desktop/201/BF5/Data/kaggle_gross_rent.csv", col_types = l_cols)
state.name
State_name
l_cols = readr::cols_only(State_Name = "c",
County     = "c",
Median     = "i",
Samples    = "i")
State_name
View(l_cols)
l_cols
State_Name
tolower(State_Name)
sprintf("%s,%s", tolower(State_Name)
)
sprintf("%s,%s", tolower(df_rent$State_Name))
tolower(stringr::str_trim(stringr::str_replace(County, "County", "")))
xxx <- df_rent$County
xxx
tolower(stringr::str_trim(stringr::str_replace(xxx$County, "County", ""))
))
tolower(stringr::str_trim(stringr::str_replace(xxx$County, "County", "")))
tolower(stringr::str_trim(stringr::str_replace(xxx, "County", "")))
df_rent = read.csv("Data/kaggle_gross_rent.csv", stringsAsFactors = FALSE)
# convert invalid UTF-8 characters that seem to be present ----------------
# df_rent$County = iconv(df_rent$County, "UTF-8", "UTF-8", sub = "")
# load county geometry ----------------------------------------------------
m_geom = maps::map("state", fill = TRUE, plot = FALSE)
# build ID field in rent data to match geometry ---------------------------
df_rent = as.data.table(df_rent)
df_rent$County
View(x)
source('~/Desktop/201/a8-app-towm1204/test_script.R')
View(df_rent)
View(df_rent)
source('~/Desktop/201/a8-app-towm1204/test_script.R')
df_homeless <- read.csv("~/Desktop/201/BF5/Data/Homelessness.csv", stringsAsFactors = FALSE)
df_homeless['State'] <- state.name[match(df_homeless$State, state.abb)]
df_homeless$ID <- tolower(df_homeless['State'])
View(df_homeless)
View(df_homeless)
View(df_homeless)
>>>>>>> master
