employee <- list(name="Huang", zip=98105, union=FALSE)
employee
cat("hi", 1, "okay")
employee[[1]]
employee[1]
h <- c(160, 171, 177, 199, 182)
w <- c(66,77,88,82,92)
health <- data.frame(height=h, weight=w)
health
health$height
health$weight
health["weight"]
health[1,3]
health[1,2]
health[1]
health[2]
health[1,]
health[1:3, 2]
health[c(5,4,3),]
row.names(health) <- c("Juan", "Alex", "Ting", "Tong", "Tam")
health
health["Juan", "height"]
health[health$height > 180]
health[health$height > 180,]
health$weight["Tong"]
health["Tong", "weight"]
health$weight["Tong",]
health[4,2]
health[4,]
health[4]
health["Tong",2]
health$bmi <- health$weight/(health$height/100)^2
health
row.names(health[4]) <- "An"
row.names(health[4,]) <- "An"
health
health[4,1] <- "An"
health
health[4,1] <- c("An")
health
table <- filter(data, longitude > 180, longitude <= 310, latitude > 15)
x <- 1:20
x
max(x)
y <- 20:40
y
xy <- data.frame(x, y)
y <- 21: 40
xy <- data.frame(x, y)
xy
max(y)
max(x)
max(xy[,x])
max(xy[,'x'])
median(xy$x)
setwd("~/Desktop/201/BF5")
shiny::runApp('newshiny')
runApp('newshiny')
runApp('newshiny')
runApp('newshiny')
runApp('towshiny')
runApp('towshiny')
geo_homeless <- geojson_read( x = "~/Desktop/201/BF5/Data/us-states.json"
, what = "sp", stringsAsFactor = FALSE)
rm(geo_homeless)
runApp('towshiny')
runApp('towshiny')
runApp()
runApp('towshiny')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
setwd("~/Desktop/201/BF5/towshiny")
runApp()
runApp()
runApp('~/Desktop/201/BF5')
runApp('~/Desktop/201/BF5')
runApp('~/Desktop/201/BF5')
load("~/Desktop/201/BF5/.RData")
runApp('~/Desktop/201/BF5')
rm(list=ls())
runApp('~/Desktop/201/BF5')
runApp('~/Desktop/201/BF5')
runApp()
runApp()
install.packages("openintro")
shiny::runApp()
runApp()
install.packages("openintro")
shiny::runApp()
setwd("~/Desktop/201/BF5")
runApp('towshiny')
getwd()
homeless_by_state <- read.csv("data/Homelessness.csv", stringsAsFactors = FALSE)
runApp('towshiny')
runApp('towshiny')
runApp('towshiny')
data.table(fread)
runApp()
runApp()
rsconnect::setAccountInfo
library(rsconnect)
deployApp()
deployApp()
runApp()
deployApp()
setwd("~/Desktop/201/BF5")
deployApp()
rsconnect::setAccountInfo
library(rsconnect)
deployApp()
install.packages('rsconnect')
install.packages("rsconnect")
rm(list=ls())
shiny::runApp()
library(rsconnect)
rsconnect::setAccountInfo(name='towm1204', token='19F5F2F0DFBE7D64FF11E45708A31A20', secret='N+bqMtCa4k9+n1gTfTDAW30AqyhIf5/QT2t+Y4m4')
deployApp()
deployApp()
library(rsconnect)
deployApp()
library(rsconnect)
deployApp(appName = "Homelessness Map")
library(rsconnect)
deployApp(appName = "HomelessnessMap")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/Downloads/refugee-tracker-master')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
df_homeless <- read.csv("Data/Homelessness.csv", stringsAsFactors = FALSE)
# clean up homeless data
state_name <- append(state.name, "District of Columbia", after = 8)
state_abb <- append(state.abb, "DC", after = 8)
df_homeless['State'] <- state_name[match(df_homeless$State, state_abb)]
df_homeless$Count[is.na(df_homeless$Count)] <- 0
df_homeless$Count <- as.numeric(sub(",", "", df_homeless$Count, fixed = TRUE))
df_homeless$Year <- dmy(df_homeless$Year)
df_homeless <- na.omit(df_homeless)
View(df_homeless)
df_homeless <- filter(df_homeless, year(Year) == 2016)
df_homeless <- filter(df_homeless, Measures == 'Total Homeless') %>% group_by(State) %>%
summarise("total" = sum(Count))
View(df_homeless)
runApp()
df_homeless <- filter(df_homeless, Measures == 'Total Homeless', State = 'California') %>% group_by(State) %>%
summarise("total" = sum(Count))
df_homeless <- filter(df_homeless, Measures == 'Total Homeless', State == 'California') %>% group_by(State) %>%
summarise("total" = sum(Count))
df_homeless <- filter(df_homeless, Measures == 'Total Homeless', State == 'California') %>% group_by(State) %>%
summarise("total" = sum(Count))
runApp()
library(shiny)
library(leaflet)
library(dplyr)
library(lubridate)
library(geojsonio)
shinyServer(function(input, output) {
# load homeless data
df_homeless <- read.csv("Data/Homelessness.csv", stringsAsFactors = FALSE)
# clean up homeless data
state_name <- append(state.name, "District of Columbia", after = 8)
state_abb <- append(state.abb, "DC", after = 8)
df_homeless['State'] <- state_name[match(df_homeless$State, state_abb)]
df_homeless$Count[is.na(df_homeless$Count)] <- 0
df_homeless$Count <- as.numeric(sub(",", "", df_homeless$Count, fixed = TRUE))
df_homeless$Year <- dmy(df_homeless$Year)
df_homeless <- na.omit(df_homeless)
)
# load homeless data
df_homeless <- read.csv("Data/Homelessness.csv", stringsAsFactors = FALSE)
# clean up homeless data
state_name <- append(state.name, "District of Columbia", after = 8)
state_abb <- append(state.abb, "DC", after = 8)
df_homeless['State'] <- state_name[match(df_homeless$State, state_abb)]
df_homeless$Count[is.na(df_homeless$Count)] <- 0
df_homeless$Count <- as.numeric(sub(",", "", df_homeless$Count, fixed = TRUE))
df_homeless$Year <- dmy(df_homeless$Year)
df_homeless <- na.omit(df_homeless)
df_homeless <- filter(df_homeless, Measures == 'Total Homeless', State == input$state) %>% group_by(State) %>%
summarise("total" = sum(Count))
df_homeless <- filter(df_homeless, Measures == 'Total Homeless', State == 'California') %>% group_by(State) %>%
summarise("total" = sum(Count))
View(df_homeless)
# load homeless data
df_homeless <- read.csv("Data/Homelessness.csv", stringsAsFactors = FALSE)
# clean up homeless data
state_name <- append(state.name, "District of Columbia", after = 8)
state_abb <- append(state.abb, "DC", after = 8)
df_homeless['State'] <- state_name[match(df_homeless$State, state_abb)]
df_homeless$Count[is.na(df_homeless$Count)] <- 0
df_homeless$Count <- as.numeric(sub(",", "", df_homeless$Count, fixed = TRUE))
df_homeless$Year <- dmy(df_homeless$Year)
df_homeless <- na.omit(df_homeless)
View(df_homeless)
df_homeless <- filter(df_homeless, Measures == 'Total Homeless', State == input$state) %>% group_by(State)
df_homeless <- filter(df_homeless, Measures == 'Total Homeless', State == 'California') %>% group_by(State)
View(df_homeless)
df_homeless$Year <- year(df_homeless$Year)
View(df_homeless)
df_homeless$Year <- year(df_homeless$Year)
df_homeless <- filter(df_homeless, Measures == 'Total Homeless', State == input$state) %>% group_by(Year) %>%
summarise("total" = sum(Count))
df_homeless$Year <- year(df_homeless$Year)
df_homeless <- filter(df_homeless, Measures == 'Total Homeless', State == 'California') %>% group_by(Year) %>%
summarise("total" = sum(Count))
View(df_homeless)
bar <- ggplot(df_homeless, aes(Year))
bar
bar <- ggplot(df_homeless, aes(Year)) + geom_bar()
bar
bar <- ggplot(df_homeless, aes(x = Year, y = total)) + geom_bar()
bar
runApp()
bar <- ggplot(df_homeless, aes(x=Year, y=total)) +
geom_bar(stat="identity", fill=c("grey"))
bar
bar <- ggplot(df_homeless, aes(x=Year, y=total)) +
geom_bar(stat="identity", fill=c("grey")) +
geom_text(aes(label=total)) +
labs(y = "# of Representatives", x = "Party")
bar
bar <- ggplot(df_homeless, aes(x=Year, y=total)) +
geom_bar(stat="identity", fill=c("grey")) +
geom_text(aes(label=total), size = 3) +
labs(y = "# of Representatives", x = "Party")
bar
bar <- ggplot(df_homeless, aes(x=Year, y=total)) +
geom_bar(stat="identity", fill=c("grey")) +
geom_text(aes(label=total), size = 3) +
labs(y = "# of Representatives", x = "Party", nudge.y = -0.5)
baar
bar
bar <- ggplot(df_homeless, aes(x=Year, y=total)) +
geom_bar(stat="identity", fill=c("grey")) +
geom_text(aes(label=total), size = 3) +
labs(y = "# of Representatives", x = "Party", nudge.y = -10)
bar
bar <- ggplot(df_homeless, aes(x=Year, y=total)) +
geom_bar(stat="identity", fill=c("grey")) +
geom_text(aes(label=total), size = 3) +
labs(y = "# of Representatives", x = "Party", nudge.y = -5000)
bar
bar <- ggplot(df_homeless, aes(x=Year, y=total)) +
geom_bar(stat="identity", fill=c("grey")) +
geom_text(aes(label=total), size = 3) +
labs(y = "# of Representatives", x = "Party", nudge.y = -5000)
bar
bar <- ggplot(df_homeless, aes(x=Year, y=total)) +
geom_bar(stat="identity", fill=c("grey")) +
geom_text(aes(label=total), size = 3) +
labs(y = "# of Representatives", x = "Party", nudge_y = -5)
bar
bar <- ggplot(df_homeless, aes(x=Year, y=total)) +
geom_bar(stat="identity", fill=c("grey")) +
geom_text(aes(label=total), size = 3) +
labs(y = "# of Representatives", x = "Party", vjust = -5)
bar
bar <- ggplot(df_homeless, aes(x=Year, y=total)) +
geom_bar(stat="identity", fill=c("grey")) +
geom_text(aes(label=total), size = 3) +
labs(y = "# of Representatives", x = "Party", vjust = -50)
bar
bar <- ggplot(df_homeless, aes(x=Year, y=total)) +
geom_bar(stat="identity", fill=c("grey")) +
geom_text(aes(label=total), size = 3) +
labs(y = "# of Representatives", x = "Party", vjust = -10)
bar
bar <- ggplot(df_homeless, aes(x=Year, y=total)) +
geom_bar(stat="identity", fill=c("grey")) +
geom_labt(aes(label=total), size = 3) +
labs(y = "# of Representatives", x = "Party", vjust = -10)
bar <- ggplot(df_homeless, aes(x=Year, y=total)) +
geom_bar(stat="identity", fill=c("grey")) +
geom_lab(aes(label=total), size = 3) +
labs(y = "# of Representatives", x = "Party", vjust = -10)
bar <- ggplot(df_homeless, aes(x=Year, y=total)) +
geom_bar(stat="identity", fill=c("grey")) +
geom_label(aes(label=total), size = 3) +
labs(y = "# of Representatives", x = "Party", vjust = -10)
bar
runApp()
rm(list=ls())
runApp()
runApp()
runApp()
runApp()
bar <- ggplot(df_homeless, aes(x=Year, y=total)) +
geom_bar(stat="identity", fill=c("green")) +
geom_label(aes(label=total), size = 3) +
labs(y = "Homeless Population") +
ggtitle(paste0(input$state,"'s Total Homeless Population by Year")) +
scale_x_discrete(name = 'Year', limits = 2007:2016)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
deployApp()
runApp()
runApp()
deployApp()
runApp()
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("dplyr")
install.packages("dplyr")
shiny::runApp()
setwd("~/Desktop/201/BF5")
runApp()
runApp()
runApp()
runApp()
install.packages('dplyr')
install.packages("dplyr")
install.packages("lurbridate")
install.packages("geojsonio")
runApp()
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
shiny::runApp()
runApp()
deployApp()
install.packages('rsconnect')
install.packages("rsconnect")
runApp()
library(rsconnect)
deployApp()
runApp()
runApp()
deployApp()
library(shiny)
library(leaflet)
state_name <- append(state.name, "District of Columbia", after = 8)
ui <- navbarPage(
"Homelessness in the US",
tabPanel("Homeless Population Map",
sidebarLayout(
sidebarPanel(
selectInput("indicator", " Indicator", c("Total Homeless", "Chronically Homeless Individuals" ,
'Unsheltered Chronically Homeless Individuals')),
sliderInput("year", "Year of Interest", 2007, 2016, 2016, step = 1, round = True, ticks = FALSE, sep = "")),
mainPanel(leafletOutput("homeless_m"))
)
),
tabPanel("State Rankings",
sidebarLayout(
sidebarPanel(
selectInput("rank_indicator", "Indicator", c("Total Homeless", "Chronically Homeless Individuals" ,
'Unsheltered Chronically Homeless Individuals')),
sliderInput("rank_year", "Year of Interest", 2007, 2016, 2016, step = 1, round = True, ticks = FALSE, sep = "")
),
mainPanel(tableOutput("ranking"))
)
),
tabPanel("Homeless Population by State",
sidebarLayout(
sidebarPanel(
selectInput("state", "State of Interest", state_name),
selectInput("state_indicator", "Indicator", c("Total Homeless", "Chronically Homeless Individuals" ,
'Unsheltered Chronically Homeless Individuals'))
),
mainPanel(plotOutput("by_state"))
)
),
tabPanel("About Us!", mainPanel(
h1("Yash Baldawa"),
p("Yash is a Sophomore at UW who's interested in Pursuing Informatics. He can be found on Linkedin here"),
a("Linkedin", href = "https://www.linkedin.com/in/yashb4/"),
h1("Tow Mokaramanee"),
p("Tow is a Sophomore at UW who's interested in Informatics too! He has been extremely enthusiastic about this
project all the while. He can be found on facebook here"),
a("Facebook:", href = "https://www.facebook.com/tow2542"),
h1("Suyash Ahuja"),
p("Suyash is a sophomore at the UW. Learn more about Suyash here - "),
a("Facebook:" ,href = "https://www.facebook.com/sy.ahuja")
)),
tabPanel("Why this?",
mainPanel(
h1("Why Homelessness?"),
p("Homelessness is a rising problem in Tech Hubs like Seattle, San Francisco, Austin - Texas and
Boston - MA, wherein, due to rising costs of living because of an inorganic inflow of money from Tech
Giants, costs of living start rising which eventually force people to move out to other places.
Sometimes, the situation becomes so bad that people can't afford rent and made to live out on streets/
homeless shelters/ other forms of Refuge which qualify to be homeless according to this data set.
We even explore what are sometimes referred to as causes of Homelessness too, like alcohol and drug abuse
and demostrate if it holds true in case of all states. "),
br(),
h1("How does this Visualization Help?"),
p("This visualization, even though it is on a very small scale, can help government gain leverage over the
problem of homelessness by attacking its root cause."),
p("Weather it is providing affordable housing schemes in very expensive states/neighbourhoods to making the
laws more stringent on preventing alochol abuse to prevent homelessness, we go over differnt visualizations
to see if any of these can be a potential causes of Homelessness")
),
h1("Data Sets in Use"),
a("Homeless Data Set Kaggle", href = "https://www.kaggle.com/adamschroeder/homelessness/version/2"),
a("Incomces Data Set Kaggle", href = "https://www.kaggle.com/goldenoakresearch/us-household-income-stats-geo-locations#kaggle_income.csv"),
a("Drinking Data Sources and States", href = "http://www.healthdata.org/us-health/data-download")
)
)
runApp()
# Homelessness in the United States
This assignment visualizes data from multiple sources and allows audience to draw a relation between Increasing rent price and Wage Increase and people moving out of Neighbourhoods and correlation between increase in use of Drug and Alocohol Usage and Increase in Homelessness. This topic is very essential to Seattle since with the heavy increase in growth of Startups around the region, many locals have been forced to relocate and a lot of neighbourhoods in Seattle have shown major signs of being Gentrified.
# Link to the Shiny App
[Shiny App Link] (https://towm1204.shinyapps.io/HomelessnessMap/)
# Datasets Used -
[Homelessness Data Set Population: Kaggle](https://www.kaggle.com/adamschroeder/homelessness/version/2)
[US Census Data](https://www.kaggle.com/muonneutrino/us-census-demographic-data)
[US Maps Data to create Map Infograph](https://github.com/rstudio/leaflet/issues/498)
[Drinking Data for US States](http://www.healthdata.org/us-health/data-download)
# Why Homelessness?
Homelessness is a rising problem in Tech Hubs like Seattle, San Francisco, Austin - Texas and Boston - MA, wherein, due to rising costs of living because of an inorganic inflow of money from Tech Giants, costs of living start rising which eventually force people to move out to other places. Sometimes, the situation becomes so bad that people can't afford rent and made to live out on streets/ homeless shelters/ other forms of Refuge which qualify to be homeless according to this data set. We even explore what are sometimes referred to as causes of Homelessness too, like alcohol and drug abuse and demostrate if it holds true in case of all states.
# How does this Visualization Help?
This visualization, even though it is on a very small scale, can help government gain leverage over the problem of homelessness by attacking its root cause. Weather it is providing affordable housing schemes in very expensive states/neighbourhoods to making the laws more stringent on preventing alochol abuse to prevent homelessness, we go over differnt visualizations to see if any of these can be a potential causes of Homelessness
# Project Team Members:
Yash Baldawa
___
Tow Mokaramnee
___
Suyash Ahuja
runApp()
deployApp()
setwd("~/Desktop/201/BF5")
rent <- read.csv("Data/kaggle_gross_rent.csv")
rent <- read.csv("Data/kaggle_gross_rent.csv", stringsAsFactors = FALSE)
View(rent)
rent <- rent %>% filter(State_Name == "District of Columbia" | Type != 'Track')
View(rent)
rent <- rent %>% filter(State_Name == "District of Columbia" | Type != 'Track') %>% group_by(State_Name) %>%
summarise('State_average' = mean(Mean))
View(rent)
rent <- rent %>% filter(State_Name == "District of Columbia" | Type != 'Track', State_Name != 'Puerto Rico') %>%
group_by(State_Name) %>%
summarise('State_average' = mean(Mean))
rent <- read.csv("Data/kaggle_gross_rent.csv", stringsAsFactors = FALSE)
rent <- rent %>% filter(State_Name == "District of Columbia" | Type != 'Track', State_Name != 'Puerto Rico') %>%
group_by(State_Name) %>%
summarise('State_average' = mean(Mean))
View(rent)
runApp()
# load homeless data
df_homeless <- read.csv("Data/Homelessness.csv", stringsAsFactors = FALSE)
# clean up homeless data
state_name <- append(state.name, "District of Columbia", after = 8)
state_abb <- append(state.abb, "DC", after = 8)
df_homeless['State'] <- state_name[match(df_homeless$State, state_abb)]
df_homeless$Count[is.na(df_homeless$Count)] <- 0
df_homeless$Count <- as.numeric(sub(",", "", df_homeless$Count, fixed = TRUE))
df_homeless$Year <- dmy(df_homeless$Year)
df_homeless <- na.omit(df_homeless)
runApp()
runApp()
runApp()
deployApp()
runApp()
runApp()
geo_homeless <- geojson_read( x = "~/Desktop/201/BF5/Data/us-states.json"
, what = "sp", stringsAsFactor = FALSE)
View(df_homeless)
View(geo_homeless)
runApp()
runApp()
geo_homeless@data <- right_join(geo_homeless@data, df_homeless, by = 'name')
runApp()
runApp()
